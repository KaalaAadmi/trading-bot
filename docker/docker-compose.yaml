services:
  timescaledb:
    image: timescale/timescaledb:latest-pg14
    container_name: timescaledb
    networks:
      - trading_bot_network
    restart: always
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
      - ${PWD}/../db/init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - ../.env

  redis:
    image: redis:latest
    container_name: redis
    networks:
      - trading_bot_network
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    networks:
      - trading_bot_network
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ../monitoring/prometheus.yaml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml" # Path to the config file
      - "--storage.tsdb.retention.time=90d" # Retain metrics for 90 days
      - "--storage.tsdb.path=/prometheus" # Path to store metrics

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    networks:
      - trading_bot_network
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
    restart: always
    env_file:
      - ../.env

  redis_exporter:
    image: oliver006/redis_exporter:latest
    container_name: redis_exporter
    networks:
      - trading_bot_network
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis:6379
    restart: always

  postgres_exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres_exporter
    networks:
      - trading_bot_network
    ports:
      - "9187:9187"
    environment:
      DATA_SOURCE_NAME: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@timescaledb:${POSTGRES_PORT}/trading_bot?sslmode=disable"
    restart: always
    env_file:
      - ../.env

volumes:
  timescaledb_data:
  grafana_data:
  redis_data:

networks:
  trading_bot_network:
    external: true
